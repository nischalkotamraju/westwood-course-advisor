{"ast":null,"code":"/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n  return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n  return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n  return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n  const len = array.length;\n  for (let i = 0; i < len; i++) fn(array[i], i);\n  return array;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n  CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n  const tagStart = str.indexOf('<');\n  if (tagStart < 0 || tagStart > str.length - 3) return false;\n  const tagChar = str.charCodeAt(tagStart + 1);\n  return (tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ || tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ || tagChar === CharacterCodes.Exclamation) && str.includes('>', tagStart + 2);\n}","map":{"version":3,"names":["isCheerio","maybeCheerio","cheerio","camelCase","str","replace","_","x","toUpperCase","cssCase","toLowerCase","domEach","array","fn","len","length","i","CharacterCodes","isHtml","tagStart","indexOf","tagChar","charCodeAt","LowerA","LowerZ","UpperA","UpperZ","Exclamation","includes"],"sources":["/Users/nischalkotamraju/Desktop/rrisd-course-advisor/node_modules/cheerio/src/utils.ts"],"sourcesContent":["import type { AnyNode } from 'domhandler';\nimport type { Cheerio } from './cheerio.js';\n\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio<T>(maybeCheerio: any): maybeCheerio is Cheerio<T> {\n  return maybeCheerio.cheerio != null;\n}\n\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str: string): string {\n  return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str: string): string {\n  return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach<\n  T extends AnyNode,\n  Arr extends ArrayLike<T> = Cheerio<T>,\n>(array: Arr, fn: (elem: T, index: number) => void): Arr {\n  const len = array.length;\n  for (let i = 0; i < len; i++) fn(array[i], i);\n  return array;\n}\n\nconst enum CharacterCodes {\n  LowerA = 97,\n  LowerZ = 122,\n  UpperA = 65,\n  UpperZ = 90,\n  Exclamation = 33,\n}\n\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str: string): boolean {\n  const tagStart = str.indexOf('<');\n\n  if (tagStart < 0 || tagStart > str.length - 3) return false;\n\n  const tagChar = str.charCodeAt(tagStart + 1);\n\n  return (\n    ((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n      (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n      tagChar === CharacterCodes.Exclamation) &&\n    str.includes('>', tagStart + 2)\n  );\n}\n"],"mappings":"AAGA;;;;;;;AAOA,OAAM,SAAUA,SAASA,CAAIC,YAAiB;EAC5C,OAAOA,YAAY,CAACC,OAAO,IAAI,IAAI;AACrC;AAEA;;;;;;;;AAQA,OAAM,SAAUC,SAASA,CAACC,GAAW;EACnC,OAAOA,GAAG,CAACC,OAAO,CAAC,cAAc,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,WAAW,EAAE,CAAC;AAC/D;AAEA;;;;;;;;;AASA,OAAM,SAAUC,OAAOA,CAACL,GAAW;EACjC,OAAOA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAACK,WAAW,EAAE;AACnD;AAEA;;;;;;;;;;;;AAYA,OAAM,SAAUC,OAAOA,CAGrBC,KAAU,EAAEC,EAAoC;EAChD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAEH,EAAE,CAACD,KAAK,CAACI,CAAC,CAAC,EAAEA,CAAC,CAAC;EAC7C,OAAOJ,KAAK;AACd;AAEA,IAAWK,cAMV;AAND,WAAWA,cAAc;EACvBA,cAAA,CAAAA,cAAA,2BAAW;EACXA,cAAA,CAAAA,cAAA,4BAAY;EACZA,cAAA,CAAAA,cAAA,2BAAW;EACXA,cAAA,CAAAA,cAAA,2BAAW;EACXA,cAAA,CAAAA,cAAA,qCAAgB;AAClB,CAAC,EANUA,cAAc,KAAdA,cAAc;AAQzB;;;;;;;;;;;AAWA,OAAM,SAAUC,MAAMA,CAACd,GAAW;EAChC,MAAMe,QAAQ,GAAGf,GAAG,CAACgB,OAAO,CAAC,GAAG,CAAC;EAEjC,IAAID,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAGf,GAAG,CAACW,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;EAE3D,MAAMM,OAAO,GAAGjB,GAAG,CAACkB,UAAU,CAACH,QAAQ,GAAG,CAAC,CAAC;EAE5C,OACE,CAAEE,OAAO,IAAIJ,cAAc,CAACM,MAAM,IAAIF,OAAO,IAAIJ,cAAc,CAACO,MAAM,IACnEH,OAAO,IAAIJ,cAAc,CAACQ,MAAM,IAAIJ,OAAO,IAAIJ,cAAc,CAACS,MAAO,IACtEL,OAAO,KAAKJ,cAAc,CAACU,WAAW,KACxCvB,GAAG,CAACwB,QAAQ,CAAC,GAAG,EAAET,QAAQ,GAAG,CAAC,CAAC;AAEnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}