{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body, options) {\n    return this._client.post('/files', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId, options) {\n    return this._client.get(`/files/${fileId}`, options);\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/files', FileObjectsPage, {\n      query,\n      ...options\n    });\n  }\n  /**\n   * Delete a file.\n   */\n  del(fileId, options) {\n    return this._client.delete(`/files/${fileId}`, options);\n  }\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId, options) {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      __binaryResponse: true\n    });\n  }\n  /**\n   * Returns the contents of the specified file.\n   *\n   * @deprecated The `.content()` method should be used instead\n   */\n  retrieveContent(fileId, options) {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      headers: {\n        Accept: 'application/json',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(id, {\n    pollInterval = 5000,\n    maxWait = 30 * 60 * 1000\n  } = {}) {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n    const start = Date.now();\n    let file = await this.retrieve(id);\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`\n        });\n      }\n    }\n    return file;\n  }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page {}\n(function (Files) {\n  Files.FileObjectsPage = FilesAPI.FileObjectsPage;\n})(Files || (Files = {}));","map":{"version":3,"names":["APIResource","isRequestOptions","sleep","APIConnectionTimeoutError","Core","FilesAPI","Page","Files","create","body","options","_client","post","multipartFormRequestOptions","retrieve","fileId","get","list","query","getAPIList","FileObjectsPage","del","delete","content","__binaryResponse","retrieveContent","headers","Accept","waitForProcessing","id","pollInterval","maxWait","TERMINAL_STATES","Set","start","Date","now","file","status","has","message"],"sources":["../src/resources/files.ts"],"sourcesContent":[null],"mappings":"AAAA;SAESA,WAAW,QAAE;SACbC,gBAAgB,QAAE;SAClBC,KAAK,QAAE;SACPC,yBAAyB,QAAE;OAC7B,KAAKC,IAAI;OACT,KAAKC,QAAQ;SACXC,IAAI,QAAE;AAGf,OAAM,MAAOC,KAAM,SAAQP,WAAW;EACpC;;;;;;;;;;;;;;;;;;;;;;;EAuBAQ,MAAMA,CAACC,IAAsB,EAAEC,OAA6B;IAC1D,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,EAAER,IAAI,CAACS,2BAA2B,CAAC;MAAEJ,IAAI;MAAE,GAAGC;IAAO,CAAE,CAAC,CAAC;EAC5F;EAEA;;;EAGAI,QAAQA,CAACC,MAAc,EAAEL,OAA6B;IACpD,OAAO,IAAI,CAACC,OAAO,CAACK,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAEL,OAAO,CAAC;EACtD;EAOAO,IAAIA,CACFC,KAAA,GAA8C,EAAE,EAChDR,OAA6B;IAE7B,IAAIT,gBAAgB,CAACiB,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACD,IAAI,CAAC,EAAE,EAAEC,KAAK,CAAC;;IAE7B,OAAO,IAAI,CAACP,OAAO,CAACQ,UAAU,CAAC,QAAQ,EAAEC,eAAe,EAAE;MAAEF,KAAK;MAAE,GAAGR;IAAO,CAAE,CAAC;EAClF;EAEA;;;EAGAW,GAAGA,CAACN,MAAc,EAAEL,OAA6B;IAC/C,OAAO,IAAI,CAACC,OAAO,CAACW,MAAM,CAAC,UAAUP,MAAM,EAAE,EAAEL,OAAO,CAAC;EACzD;EAEA;;;EAGAa,OAAOA,CAACR,MAAc,EAAEL,OAA6B;IACnD,OAAO,IAAI,CAACC,OAAO,CAACK,GAAG,CAAC,UAAUD,MAAM,UAAU,EAAE;MAAE,GAAGL,OAAO;MAAEc,gBAAgB,EAAE;IAAI,CAAE,CAAC;EAC7F;EAEA;;;;;EAKAC,eAAeA,CAACV,MAAc,EAAEL,OAA6B;IAC3D,OAAO,IAAI,CAACC,OAAO,CAACK,GAAG,CAAC,UAAUD,MAAM,UAAU,EAAE;MAClD,GAAGL,OAAO;MACVgB,OAAO,EAAE;QAAEC,MAAM,EAAE,kBAAkB;QAAE,GAAGjB,OAAO,EAAEgB;MAAO;KAC3D,CAAC;EACJ;EAEA;;;EAGA,MAAME,iBAAiBA,CACrBC,EAAU,EACV;IAAEC,YAAY,GAAG,IAAI;IAAEC,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG;EAAI,IAAkD,EAAE;IAEnG,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IAElE,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;IACxB,IAAIC,IAAI,GAAG,MAAM,IAAI,CAACvB,QAAQ,CAACe,EAAE,CAAC;IAElC,OAAO,CAACQ,IAAI,CAACC,MAAM,IAAI,CAACN,eAAe,CAACO,GAAG,CAACF,IAAI,CAACC,MAAM,CAAC,EAAE;MACxD,MAAMpC,KAAK,CAAC4B,YAAY,CAAC;MAEzBO,IAAI,GAAG,MAAM,IAAI,CAACvB,QAAQ,CAACe,EAAE,CAAC;MAC9B,IAAIM,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,GAAGH,OAAO,EAAE;QAChC,MAAM,IAAI5B,yBAAyB,CAAC;UAClCqC,OAAO,EAAE,iCAAiCX,EAAE,+BAA+BE,OAAO;SACnF,CAAC;;;IAIN,OAAOM,IAAI;EACb;;AAGF;;;AAGA,OAAM,MAAOjB,eAAgB,SAAQd,IAAgB;AA0GrD,WAAiBC,KAAK;EAKNA,KAAA,CAAAa,eAAe,GAAGf,QAAQ,CAACe,eAAe;AAG1D,CAAC,EARgBb,KAAK,KAALA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}