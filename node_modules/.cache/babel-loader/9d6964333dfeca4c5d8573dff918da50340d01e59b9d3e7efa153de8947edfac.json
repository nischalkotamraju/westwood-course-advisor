{"ast":null,"code":"var _jsxFileName = \"/Users/nischalkotamraju/Desktop/rrisd-course-advisor/src/components/Build.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport otherData from \"../assets/data/other-three.json\";\nimport freshmanData from \"../assets/data/freshman.json\";\nimport { ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid';\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: 'sk-la8GDlMXteiPcwykGJT76wSzhAHmxeMJOg94K4Tgl9T3BlbkFJuzdz0x6rC3BFZlwH8EjnnVYQTdTvgn739E5q0bvrIA',\n  dangerouslyAllowBrowser: true\n});\nconst CourseDropdown = ({\n  index,\n  subject,\n  courses,\n  searchTerm,\n  onSearchChange,\n  onCourseSelect,\n  selectedCourse,\n  isActive,\n  onToggle\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"relative dropdown-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onToggle,\n    className: \"w-full p-3 bg-neutral-800 text-white rounded-lg cursor-pointer hover:bg-neutral-700 transition-all duration-300 flex justify-between items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: selectedCourse ? selectedCourse.name : subject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n      className: `w-5 h-5 transform transition-transform duration-300 ${isActive ? 'rotate-180' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute z-50 w-full mt-1 bg-neutral-800 rounded-lg overflow-hidden shadow-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => onSearchChange(index, e.target.value),\n      placeholder: `Search for a ${subject}`,\n      className: \"w-full p-3 bg-neutral-700 text-white focus:outline-none shadow-2xl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-h-60 overflow-auto\",\n      children: courses.filter(course => course.name.toLowerCase().includes(searchTerm.toLowerCase())).map((course, courseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 hover:bg-neutral-700 cursor-pointer text-white\",\n        onClick: () => onCourseSelect(index, course),\n        children: course.name\n      }, courseIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = CourseDropdown;\nCourseDropdown.propTypes = {\n  index: PropTypes.number.isRequired,\n  subject: PropTypes.string.isRequired,\n  courses: PropTypes.array.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  onSearchChange: PropTypes.func.isRequired,\n  onCourseSelect: PropTypes.func.isRequired,\n  selectedCourse: PropTypes.object,\n  isActive: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\nexport default function Build({\n  courses: initialCourses\n}) {\n  _s();\n  const [currentYear, setCurrentYear] = useState(1);\n  const [courses, setCourses] = useState(initialCourses);\n  const [allSelectedCourses, setAllSelectedCourses] = useState({\n    1: Array(8).fill(null),\n    2: Array(8).fill(null),\n    3: Array(8).fill(null),\n    4: Array(8).fill(null)\n  });\n  const [searchTerms, setSearchTerms] = useState(Array(8).fill(''));\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [doubleBlockedCourses, setDoubleBlockedCourses] = useState({\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0\n  });\n  const [userResponses, setUserResponses] = useState({});\n  const [quizMode, setQuizMode] = useState(null);\n  useEffect(() => {\n    const yearData = {\n      1: freshmanData[\"freshman-year\"],\n      2: otherData.departments,\n      3: otherData.departments,\n      4: otherData.departments\n    };\n    setCourses(yearData[currentYear]);\n  }, [currentYear]);\n  const handleYearChange = direction => {\n    if (direction === 'prev' && currentYear > 1) setCurrentYear(currentYear - 1);else if (direction === 'next' && currentYear < 4) {\n      if (currentYear === 1) console.log(\"Freshman Year Courses:\", allSelectedCourses[1]);\n      setCurrentYear(currentYear + 1);\n    }\n    setSearchTerms(Array(8).fill(''));\n    setActiveDropdown(null);\n  };\n  const getYearName = year => [\"\", \"Freshman\", \"Sophomore\", \"Junior\", \"Senior\"][year];\n  const handleSearchChange = useCallback((index, value) => {\n    setSearchTerms(prev => {\n      const newSearchTerms = [...prev];\n      newSearchTerms[index] = value;\n      return newSearchTerms;\n    });\n  }, []);\n  const handleCourseSelect = (index, course) => {\n    setAllSelectedCourses(prev => {\n      const newSelectedCourses = [...prev[currentYear]];\n      const previousCourse = newSelectedCourses[index];\n      newSelectedCourses[index] = course;\n      const isDoubleBlocked = course.name.includes(\"DB\");\n      const wasDoubleBlocked = previousCourse && previousCourse.name.includes(\"DB\");\n      if (isDoubleBlocked && !wasDoubleBlocked) {\n        setDoubleBlockedCourses(prev => ({\n          ...prev,\n          [currentYear]: prev[currentYear] + 1\n        }));\n        for (let i = 7; i >= 4; i--) {\n          if (newSelectedCourses[i] && !newSelectedCourses[i].name.includes(\"DB\")) {\n            newSelectedCourses[i] = null;\n            break;\n          }\n        }\n      } else if (!isDoubleBlocked && wasDoubleBlocked) {\n        setDoubleBlockedCourses(prev => ({\n          ...prev,\n          [currentYear]: prev[currentYear] - 1\n        }));\n        for (let i = 4; i <= 7; i++) {\n          if (!newSelectedCourses[i]) {\n            newSelectedCourses[i] = {\n              name: 'Elective'\n            };\n            break;\n          }\n        }\n      }\n      return {\n        ...prev,\n        [currentYear]: newSelectedCourses\n      };\n    });\n    setSearchTerms(prev => {\n      const newSearchTerms = [...prev];\n      newSearchTerms[index] = '';\n      return newSearchTerms;\n    });\n    setActiveDropdown(null);\n  };\n  const filteredCourses = useMemo(() => (index, subject) => {\n    if (!courses || !Array.isArray(courses)) return [];\n    const selectedCourses = allSelectedCourses[currentYear].filter(Boolean);\n    const selectedCourseNames = selectedCourses.map(course => course.name.split(' ')[0]);\n    const previousYearCourses = currentYear > 1 ? allSelectedCourses[currentYear - 1].filter(Boolean) : [];\n    const previousYearCourseNames = previousYearCourses.map(course => course.name.split(' ')[0]);\n    return courses.flatMap(department => department && Array.isArray(department.courses) ? department.courses.filter(course => {\n      const courseName = course.name.split(' ')[0];\n      const isAlreadySelected = allSelectedCourses[currentYear].some(selectedCourse => selectedCourse && selectedCourse.name === course.name);\n      const isRelatedCourse = selectedCourseNames.includes(courseName) && subject === 'Elective';\n      const isPreviousYearCourse = previousYearCourseNames.includes(courseName);\n      return !isAlreadySelected && !isRelatedCourse && !isPreviousYearCourse && (subject === 'Elective' ? !['Math', 'English', 'Social Studies', 'Science'].includes(department.department) : department.department === subject);\n    }) : []);\n  }, [courses, currentYear, allSelectedCourses]);\n  const toggleDropdown = index => {\n    setActiveDropdown(activeDropdown === index ? null : index);\n    if (activeDropdown !== index) {\n      setSearchTerms(prev => {\n        const newSearchTerms = [...prev];\n        newSearchTerms[index] = '';\n        return newSearchTerms;\n      });\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.dropdown-container')) setActiveDropdown(null);\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n  const renderDropdown = (index, subject) => /*#__PURE__*/_jsxDEV(CourseDropdown, {\n    index: index,\n    subject: subject,\n    courses: filteredCourses(index, subject),\n    searchTerm: searchTerms[index],\n    onSearchChange: handleSearchChange,\n    onCourseSelect: handleCourseSelect,\n    selectedCourse: allSelectedCourses[currentYear][index],\n    isActive: activeDropdown === index,\n    onToggle: () => toggleDropdown(index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n  const handleSubmit = async () => {\n    const questions = [\"What subjects do you enjoy the most? (e.g., Math, Science, English, History, Arts, Foreign Languages)\", \"Do you prefer hands-on learning or theoretical concepts?\", \"Are you interested in any specific career fields? (e.g., Engineering, Medicine, Business, Arts)\", \"What extracurricular activities or clubs interest you? (e.g., Sports, Music, Debate, Robotics)\", \"Are you considering taking any Advanced Placement (AP) or honors courses?\", \"Do you have any interest in learning a foreign language? If so, which one(s)?\", \"Are there any specific skills you'd like to develop during high school? (e.g., public speaking, programming, leadership)\", \"Do you have any long-term academic goals? (e.g., preparing for a specific college major)\"];\n    const userAnswers = Object.fromEntries(questions.map(q => [q, window.prompt(q)]));\n    setUserResponses(userAnswers);\n    const prompt = `Based on the following student responses, suggest appropriate courses for each year of high school:\n    ${Object.entries(userAnswers).map(([q, a]) => `${q}: ${a}`).join('\\n')}\n    \n    Please provide course suggestions for each year (Freshman, Sophomore, Junior, Senior) in the following format:\n    Year: [Course 1], [Course 2], [Course 3], [Course 4], [Elective 1], [Elective 2], [Elective 3], [Elective 4]\n    \n    Use the courses available in the freshman.json and other-three.json files. Make sure to include appropriate core classes (Math, English, Social Studies, Science) for each year, and select electives that align with the student's interests and goals.`;\n    try {\n      const response = await openai.completions.create({\n        model: \"text-davinci-002\",\n        prompt: prompt,\n        max_tokens: 200,\n        n: 1,\n        stop: null,\n        temperature: 0.7\n      });\n      const suggestedCourses = response.choices[0].text.trim().split('\\n');\n      const newAllSelectedCourses = Object.fromEntries([1, 2, 3, 4].map(year => [year, suggestedCourses[year - 1].split(':')[1].split(',').map(course => ({\n        name: course.trim()\n      }))]));\n      setAllSelectedCourses(newAllSelectedCourses);\n    } catch (error) {\n      console.error(\"Error getting course suggestions:\", error);\n    }\n  };\n  const handleModeSelection = mode => {\n    setQuizMode(mode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gradient-text font-bold text-5xl mb-6 text-center\",\n        children: \"Let's build.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-lg mb-8 text-center\",\n        children: \"Select your classes for the next four years!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), quizMode === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center space-x-4 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleModeSelection('quiz'),\n          className: \"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\",\n          children: \"Take Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleModeSelection('manual'),\n          className: \"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\",\n          children: \"Select Courses Manually\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 flex justify-center items-center mb-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"gradient-text font-bold text-4xl\",\n            children: getYearName(currentYear)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"gradient-text text-xl mb-4 text-center font-semibold\",\n          children: \"Core Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",\n          children: ['Math', 'English', 'Social Studies', 'Science'].map((subject, index) => renderDropdown(index, subject))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"gradient-text text-xl mb-4 text-center font-semibold\",\n          children: \"Electives\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n          children: [4, 5, 6, 7].map(index => doubleBlockedCourses[currentYear] < 8 - index && renderDropdown(index, 'Elective'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 flex justify-between items-center\",\n          children: [currentYear > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleYearChange('prev'),\n            className: \"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\",\n            children: \"BACK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), currentYear < 4 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleYearChange('next'),\n            className: \"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\",\n            children: \"NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\",\n            children: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(Build, \"+uyRB6eucGjS/z9l1VO58gbNFsY=\");\n_c2 = Build;\nvar _c, _c2;\n$RefreshReg$(_c, \"CourseDropdown\");\n$RefreshReg$(_c2, \"Build\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","PropTypes","otherData","freshmanData","ChevronDownIcon","ChevronLeftIcon","ChevronRightIcon","OpenAI","jsxDEV","_jsxDEV","Fragment","_Fragment","openai","apiKey","dangerouslyAllowBrowser","CourseDropdown","index","subject","courses","searchTerm","onSearchChange","onCourseSelect","selectedCourse","isActive","onToggle","className","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","filter","course","toLowerCase","includes","map","courseIndex","_c","propTypes","number","isRequired","string","array","func","object","bool","Build","initialCourses","_s","currentYear","setCurrentYear","setCourses","allSelectedCourses","setAllSelectedCourses","Array","fill","searchTerms","setSearchTerms","activeDropdown","setActiveDropdown","doubleBlockedCourses","setDoubleBlockedCourses","userResponses","setUserResponses","quizMode","setQuizMode","yearData","departments","handleYearChange","direction","console","log","getYearName","year","handleSearchChange","prev","newSearchTerms","handleCourseSelect","newSelectedCourses","previousCourse","isDoubleBlocked","wasDoubleBlocked","i","filteredCourses","isArray","selectedCourses","Boolean","selectedCourseNames","split","previousYearCourses","previousYearCourseNames","flatMap","department","courseName","isAlreadySelected","some","isRelatedCourse","isPreviousYearCourse","toggleDropdown","handleClickOutside","event","closest","document","addEventListener","removeEventListener","renderDropdown","handleSubmit","questions","userAnswers","Object","fromEntries","q","window","prompt","entries","a","join","response","completions","create","model","max_tokens","n","stop","temperature","suggestedCourses","choices","text","trim","newAllSelectedCourses","error","handleModeSelection","mode","_c2","$RefreshReg$"],"sources":["/Users/nischalkotamraju/Desktop/rrisd-course-advisor/src/components/Build.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport otherData from \"../assets/data/other-three.json\";\nimport freshmanData from \"../assets/data/freshman.json\";\nimport { ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid';\nimport OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: 'sk-la8GDlMXteiPcwykGJT76wSzhAHmxeMJOg94K4Tgl9T3BlbkFJuzdz0x6rC3BFZlwH8EjnnVYQTdTvgn739E5q0bvrIA',\n  dangerouslyAllowBrowser: true\n});\n\nconst CourseDropdown = ({ index, subject, courses, searchTerm, onSearchChange, onCourseSelect, selectedCourse, isActive, onToggle }) => (\n  <div className=\"relative dropdown-container\">\n    <div onClick={onToggle} className=\"w-full p-3 bg-neutral-800 text-white rounded-lg cursor-pointer hover:bg-neutral-700 transition-all duration-300 flex justify-between items-center\">\n      <span>{selectedCourse ? selectedCourse.name : subject}</span>\n      <ChevronDownIcon className={`w-5 h-5 transform transition-transform duration-300 ${isActive ? 'rotate-180' : ''}`} />\n    </div>\n    {isActive && (\n      <div className=\"absolute z-50 w-full mt-1 bg-neutral-800 rounded-lg overflow-hidden shadow-2xl\">\n        <input type=\"text\" value={searchTerm} onChange={(e) => onSearchChange(index, e.target.value)} placeholder={`Search for a ${subject}`} className=\"w-full p-3 bg-neutral-700 text-white focus:outline-none shadow-2xl\" />\n        <div className=\"max-h-60 overflow-auto\">\n          {courses.filter(course => course.name.toLowerCase().includes(searchTerm.toLowerCase())).map((course, courseIndex) => (\n            <div key={courseIndex} className=\"p-2 hover:bg-neutral-700 cursor-pointer text-white\" onClick={() => onCourseSelect(index, course)}>{course.name}</div>\n          ))}\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nCourseDropdown.propTypes = {\n  index: PropTypes.number.isRequired,\n  subject: PropTypes.string.isRequired,\n  courses: PropTypes.array.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  onSearchChange: PropTypes.func.isRequired,\n  onCourseSelect: PropTypes.func.isRequired,\n  selectedCourse: PropTypes.object,\n  isActive: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n\nexport default function Build({ courses: initialCourses }) {\n  const [currentYear, setCurrentYear] = useState(1);\n  const [courses, setCourses] = useState(initialCourses);\n  const [allSelectedCourses, setAllSelectedCourses] = useState({ 1: Array(8).fill(null), 2: Array(8).fill(null), 3: Array(8).fill(null), 4: Array(8).fill(null) });\n  const [searchTerms, setSearchTerms] = useState(Array(8).fill(''));\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [doubleBlockedCourses, setDoubleBlockedCourses] = useState({ 1: 0, 2: 0, 3: 0, 4: 0 });\n  const [userResponses, setUserResponses] = useState({});\n  const [quizMode, setQuizMode] = useState(null);\n\n  useEffect(() => {\n    const yearData = { 1: freshmanData[\"freshman-year\"], 2: otherData.departments, 3: otherData.departments, 4: otherData.departments };\n    setCourses(yearData[currentYear]);\n  }, [currentYear]);\n\n  const handleYearChange = (direction) => {\n    if (direction === 'prev' && currentYear > 1) setCurrentYear(currentYear - 1);\n    else if (direction === 'next' && currentYear < 4) {\n      if (currentYear === 1) console.log(\"Freshman Year Courses:\", allSelectedCourses[1]);\n      setCurrentYear(currentYear + 1);\n    }\n    setSearchTerms(Array(8).fill(''));\n    setActiveDropdown(null);\n  };\n\n  const getYearName = (year) => [\"\", \"Freshman\", \"Sophomore\", \"Junior\", \"Senior\"][year];\n\n  const handleSearchChange = useCallback((index, value) => {\n    setSearchTerms(prev => { const newSearchTerms = [...prev]; newSearchTerms[index] = value; return newSearchTerms; });\n  }, []);\n\n  const handleCourseSelect = (index, course) => {\n    setAllSelectedCourses(prev => {\n      const newSelectedCourses = [...prev[currentYear]];\n      const previousCourse = newSelectedCourses[index];\n      newSelectedCourses[index] = course;\n\n      const isDoubleBlocked = course.name.includes(\"DB\");\n      const wasDoubleBlocked = previousCourse && previousCourse.name.includes(\"DB\");\n      \n      if (isDoubleBlocked && !wasDoubleBlocked) {\n        setDoubleBlockedCourses(prev => ({...prev, [currentYear]: prev[currentYear] + 1}));\n        for (let i = 7; i >= 4; i--) {\n          if (newSelectedCourses[i] && !newSelectedCourses[i].name.includes(\"DB\")) {\n            newSelectedCourses[i] = null;\n            break;\n          }\n        }\n      } else if (!isDoubleBlocked && wasDoubleBlocked) {\n        setDoubleBlockedCourses(prev => ({...prev, [currentYear]: prev[currentYear] - 1}));\n        for (let i = 4; i <= 7; i++) {\n          if (!newSelectedCourses[i]) {\n            newSelectedCourses[i] = { name: 'Elective' };\n            break;\n          }\n        }\n      }\n\n      return { ...prev, [currentYear]: newSelectedCourses };\n    });\n\n    setSearchTerms(prev => { const newSearchTerms = [...prev]; newSearchTerms[index] = ''; return newSearchTerms; });\n    setActiveDropdown(null);\n  };\n\n  const filteredCourses = useMemo(() => (index, subject) => {\n    if (!courses || !Array.isArray(courses)) return [];\n\n    const selectedCourses = allSelectedCourses[currentYear].filter(Boolean);\n    const selectedCourseNames = selectedCourses.map(course => course.name.split(' ')[0]);\n    const previousYearCourses = currentYear > 1 ? allSelectedCourses[currentYear - 1].filter(Boolean) : [];\n    const previousYearCourseNames = previousYearCourses.map(course => course.name.split(' ')[0]);\n\n    return courses.flatMap(department => \n      department && Array.isArray(department.courses) ? department.courses.filter(course => {\n        const courseName = course.name.split(' ')[0];\n        const isAlreadySelected = allSelectedCourses[currentYear].some(selectedCourse => selectedCourse && selectedCourse.name === course.name);\n        const isRelatedCourse = selectedCourseNames.includes(courseName) && subject === 'Elective';\n        const isPreviousYearCourse = previousYearCourseNames.includes(courseName);\n        \n        return !isAlreadySelected && !isRelatedCourse && !isPreviousYearCourse &&\n          (subject === 'Elective' ? !['Math', 'English', 'Social Studies', 'Science'].includes(department.department) : department.department === subject);\n      }) : []\n    );\n  }, [courses, currentYear, allSelectedCourses]);\n\n  const toggleDropdown = (index) => {\n    setActiveDropdown(activeDropdown === index ? null : index);\n    if (activeDropdown !== index) {\n      setSearchTerms(prev => { const newSearchTerms = [...prev]; newSearchTerms[index] = ''; return newSearchTerms; });\n    }\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.dropdown-container')) setActiveDropdown(null);\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  const renderDropdown = (index, subject) => (\n    <CourseDropdown\n      key={index}\n      index={index}\n      subject={subject}\n      courses={filteredCourses(index, subject)}\n      searchTerm={searchTerms[index]}\n      onSearchChange={handleSearchChange}\n      onCourseSelect={handleCourseSelect}\n      selectedCourse={allSelectedCourses[currentYear][index]}\n      isActive={activeDropdown === index}\n      onToggle={() => toggleDropdown(index)}\n    />\n  );\n\n  const handleSubmit = async () => {\n    const questions = [\n      \"What subjects do you enjoy the most? (e.g., Math, Science, English, History, Arts, Foreign Languages)\",\n      \"Do you prefer hands-on learning or theoretical concepts?\",\n      \"Are you interested in any specific career fields? (e.g., Engineering, Medicine, Business, Arts)\",\n      \"What extracurricular activities or clubs interest you? (e.g., Sports, Music, Debate, Robotics)\",\n      \"Are you considering taking any Advanced Placement (AP) or honors courses?\",\n      \"Do you have any interest in learning a foreign language? If so, which one(s)?\",\n      \"Are there any specific skills you'd like to develop during high school? (e.g., public speaking, programming, leadership)\",\n      \"Do you have any long-term academic goals? (e.g., preparing for a specific college major)\",\n    ];\n\n    const userAnswers = Object.fromEntries(questions.map(q => [q, window.prompt(q)]));\n    setUserResponses(userAnswers);\n\n    const prompt = `Based on the following student responses, suggest appropriate courses for each year of high school:\n    ${Object.entries(userAnswers).map(([q, a]) => `${q}: ${a}`).join('\\n')}\n    \n    Please provide course suggestions for each year (Freshman, Sophomore, Junior, Senior) in the following format:\n    Year: [Course 1], [Course 2], [Course 3], [Course 4], [Elective 1], [Elective 2], [Elective 3], [Elective 4]\n    \n    Use the courses available in the freshman.json and other-three.json files. Make sure to include appropriate core classes (Math, English, Social Studies, Science) for each year, and select electives that align with the student's interests and goals.`;\n\n    try {\n      const response = await openai.completions.create({\n        model: \"text-davinci-002\",\n        prompt: prompt,\n        max_tokens: 200,\n        n: 1,\n        stop: null,\n        temperature: 0.7,\n      });\n\n      const suggestedCourses = response.choices[0].text.trim().split('\\n');\n      const newAllSelectedCourses = Object.fromEntries([1, 2, 3, 4].map(year => [year, suggestedCourses[year - 1].split(':')[1].split(',').map(course => ({ name: course.trim() }))]));\n      setAllSelectedCourses(newAllSelectedCourses);\n    } catch (error) {\n      console.error(\"Error getting course suggestions:\", error);\n    }\n  };\n\n  const handleModeSelection = (mode) => {\n    setQuizMode(mode);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n      <div className=\"w-full max-w-3xl mb-8\">\n        <h1 className=\"gradient-text font-bold text-5xl mb-6 text-center\">Let's build.</h1>\n        <p className=\"text-white text-lg mb-8 text-center\">Select your classes for the next four years!</p>\n        {quizMode === null ? (\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            <button onClick={() => handleModeSelection('quiz')} className=\"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\">\n              Take Quiz\n            </button>\n            <button onClick={() => handleModeSelection('manual')} className=\"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\">\n              Select Courses Manually\n            </button>\n          </div>\n        ) : (\n          <>\n            <div className=\"mt-8 flex justify-center items-center mb-12\">\n              <h2 className=\"gradient-text font-bold text-4xl\">{getYearName(currentYear)}</h2>\n            </div>\n            <h3 className=\"gradient-text text-xl mb-4 text-center font-semibold\">Core Classes</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n              {['Math', 'English', 'Social Studies', 'Science'].map((subject, index) => renderDropdown(index, subject))}\n            </div>\n            <h3 className=\"gradient-text text-xl mb-4 text-center font-semibold\">Electives</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {[4, 5, 6, 7].map(index => doubleBlockedCourses[currentYear] < 8 - index && renderDropdown(index, 'Elective'))}\n            </div>\n            <div className=\"mt-8 flex justify-between items-center\">\n              {currentYear > 1 && (\n                <button onClick={() => handleYearChange('prev')} className=\"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\">\n                  BACK\n                </button>\n              )}\n              {currentYear < 4 ? (\n                <button onClick={() => handleYearChange('next')} className=\"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\">\n                  NEXT\n                </button>\n              ) : (\n                <button onClick={handleSubmit} className=\"text-white bg-orange-700 px-4 py-2 rounded-lg hover:bg-orange-600 transition-all duration-300\">\n                  SUBMIT\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}